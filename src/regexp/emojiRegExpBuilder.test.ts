import { emojiRegExpBuilder } from './emojiRegExpBuilder'

describe('emojiRegExpBuilder', () => {
  test('test', () => {
    expect(emojiRegExpBuilder.build().test('ðŸ˜Œ')).toBeTrue()
    expect(emojiRegExpBuilder.build().test('ðŸ‘ª')).toBeTrue()
    expect(emojiRegExpBuilder.build().test('ðŸ‘ªa')).toBeTrue()
    expect(emojiRegExpBuilder.build().test('abc')).toBeFalse()
    expect(emojiRegExpBuilder.build().test('ðŸ˜ŒðŸ‘ª')).toBeTrue()
  })

  test('test-exact', () => {
    expect(emojiRegExpBuilder.build({ exact: true }).test('ðŸ˜Œ')).toBeTrue()
    expect(emojiRegExpBuilder.build({ exact: true }).test('ðŸ‘ª')).toBeTrue()
    expect(emojiRegExpBuilder.build({ exact: true }).test('ðŸ‘ªa')).toBeFalse()
    expect(emojiRegExpBuilder.build({ exact: true }).test('abc')).toBeFalse()
    expect(emojiRegExpBuilder.build({ exact: true }).test('ðŸ˜ŒðŸ‘ª')).toBeFalse()
  })

  test('test-exact-repeat', () => {
    expect(
      emojiRegExpBuilder.build({ exact: true, repeat: true }).test('ðŸ˜Œ'),
    ).toBeTrue()
    expect(
      emojiRegExpBuilder.build({ exact: true, repeat: true }).test('ðŸ‘ª'),
    ).toBeTrue()
    expect(
      emojiRegExpBuilder.build({ exact: true, repeat: true }).test('ðŸ‘ªa'),
    ).toBeFalse()
    expect(
      emojiRegExpBuilder.build({ exact: true, repeat: true }).test('abc'),
    ).toBeFalse()
    expect(
      emojiRegExpBuilder.build({ exact: true, repeat: true }).test('ðŸ˜ŒðŸ‘ª'),
    ).toBeTrue()
  })

  test('match', () => {
    expect('ðŸ˜Œ'.match(emojiRegExpBuilder.build())![0]).toBe('ðŸ˜Œ')
    expect('ðŸ‘ª'.match(emojiRegExpBuilder.build())![0]).toBe('ðŸ‘ª')
    expect('ðŸ‘ªa'.match(emojiRegExpBuilder.build())![0]).toBe('ðŸ‘ª')
    expect('abc'.match(emojiRegExpBuilder.build())).toBeNull()
    expect('ðŸ˜ŒðŸ‘ª'.match(emojiRegExpBuilder.build())![0]).toBe('ðŸ˜Œ')
  })

  test('match-global', () => {
    expect(
      [...'ðŸ˜Œ'.matchAll(emojiRegExpBuilder.build({ global: true }))].map(
        item => item[0],
      ),
    ).toEqual(['ðŸ˜Œ'])
    expect(
      [...'ðŸ‘ª'.matchAll(emojiRegExpBuilder.build({ global: true }))].map(
        item => item[0],
      ),
    ).toEqual(['ðŸ‘ª'])
    expect(
      [...'ðŸ‘ªa'.matchAll(emojiRegExpBuilder.build({ global: true }))].map(
        item => item[0],
      ),
    ).toEqual(['ðŸ‘ª'])
    expect(
      [...'abc'.matchAll(emojiRegExpBuilder.build({ global: true }))].map(
        item => item[0],
      ),
    ).toEqual([])
    expect(
      [...'ðŸ˜ŒðŸ‘ª'.matchAll(emojiRegExpBuilder.build({ global: true }))].map(
        item => item[0],
      ),
    ).toEqual(['ðŸ˜Œ', 'ðŸ‘ª'])
  })

  test('match-global-repeat', () => {
    expect(
      [
        ...'ðŸ˜Œ'.matchAll(
          emojiRegExpBuilder.build({ global: true, repeat: true }),
        ),
      ].map(item => item[0]),
    ).toEqual(['ðŸ˜Œ'])
    expect(
      [
        ...'ðŸ‘ª'.matchAll(
          emojiRegExpBuilder.build({ global: true, repeat: true }),
        ),
      ].map(item => item[0]),
    ).toEqual(['ðŸ‘ª'])
    expect(
      [
        ...'ðŸ‘ªa'.matchAll(
          emojiRegExpBuilder.build({ global: true, repeat: true }),
        ),
      ].map(item => item[0]),
    ).toEqual(['ðŸ‘ª'])
    expect(
      [
        ...'abc'.matchAll(
          emojiRegExpBuilder.build({ global: true, repeat: true }),
        ),
      ].map(item => item[0]),
    ).toEqual([])
    expect(
      [
        ...'ðŸ˜ŒðŸ‘ª'.matchAll(
          emojiRegExpBuilder.build({ global: true, repeat: true }),
        ),
      ].map(item => item[0]),
    ).toEqual(['ðŸ˜ŒðŸ‘ª'])
  })

  test('getBaseRegExp', () => {
    expect(
      new RegExp(`(${emojiRegExpBuilder.getBaseRegExp().source})[A-Z]`).test(
        'ðŸ˜Œ',
      ),
    ).toBeFalse()
    expect(
      new RegExp(`(${emojiRegExpBuilder.getBaseRegExp().source})[A-Z]`).test(
        'ðŸ˜ŒX',
      ),
    ).toBeTrue()
  })
})
